<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{C70FE99A-2A69-40A6-8A7B-0DBE65554605}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>IntegrationTests</RootNamespace>
    <AssemblyName>IntegrationTests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="FluentAssertions">
      <HintPath>..\packages\FluentAssertions.3.0.90\lib\net45\FluentAssertions.dll</HintPath>
    </Reference>
    <Reference Include="FluentAssertions.Core">
      <HintPath>..\packages\FluentAssertions.3.0.90\lib\net45\FluentAssertions.Core.dll</HintPath>
    </Reference>
    <Reference Include="Moq">
      <HintPath>..\packages\Moq.4.2.1402.2112\lib\net40\Moq.dll</HintPath>
    </Reference>
    <Reference Include="Ninject">
      <HintPath>..\packages\Ninject.3.2.2.0\lib\net45-full\Ninject.dll</HintPath>
    </Reference>
    <Reference Include="StaticProxy.Interceptor">
      <HintPath>..\packages\StaticProxy.Interceptor.0.1.0-beta2\lib\portable-win+net40+sl50+wp80\StaticProxy.Interceptor.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="xunit">
      <HintPath>..\packages\xunit.1.9.2\lib\net20\xunit.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\StaticProxy.Interceptor\ExceptionExtensions.cs">
      <Link>ExceptionExtensions.cs</Link>
    </Compile>
    <Compile Include="Dependency.cs" />
    <Compile Include="FakeDynamicInterceptorCollection.cs" />
    <Compile Include="IDependency.cs" />
    <Compile Include="IntegrationTests.cs" />
    <Compile Include="IntegrationThrowException.cs" />
    <Compile Include="IntegrationWithConstructorArgument.cs" />
    <Compile Include="IntegrationWithoutConstructorArgument.cs" />
    <Compile Include="IntegrationWithReturnValue.cs" />
    <Compile Include="NotProxiedType\NotProxiedType.cs" />
    <Compile Include="NotProxiedType\NotProxiedTypeTest.cs" />
    <Compile Include="OverrideToString.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="ProxyWithoutTarget\ISomeProxiedInterface.cs" />
    <Compile Include="ProxyWithoutTarget\ProxyWithoutTargetIntegrationTests.cs" />
    <Compile Include="ProxyWithTarget\When_implementation_rethrows_exception.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="FodyWeavers.xml" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
    <Error Condition="!Exists('..\packages\Fody.1.23.2\build\Fody.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Fody.1.23.2\build\Fody.targets'))" />
  </Target>
  <Import Project="..\packages\Fody.1.23.2\build\Fody.targets" Condition="Exists('..\packages\Fody.1.23.2\build\Fody.targets')" />
  <PropertyGroup>
    <PreBuildEvent>cd $(SolutionDir)
echo "creating nuget package StaticProxy.Fody"
.nuget\nuget.exe pack StaticProxy.Fody.nuspec -version "0.0.0-IntegrationTest" -Prop Configuration=$(Configuration) 

echo "deleting old zip file - if it exists"
del StaticProxy.Fody.0.0.0-IntegrationTest.zip

echo "renaming .nupkg to .zip"
rename StaticProxy.Fody.0.0.0-IntegrationTest.nupkg StaticProxy.Fody.0.0.0-IntegrationTest.zip

echo "recreating package directory"
rmdir .\packages\StaticProxy.Fody.0.0.0-IntegrationTest /Q /S
mkdir .\packages\StaticProxy.Fody.0.0.0-IntegrationTest

echo "unpacking package"
cd packages\StaticProxy.Fody.0.0.0-IntegrationTest
cscript.exe ..\..\unzip.vbs $(SolutionDir)StaticProxy.Fody.0.0.0-IntegrationTest.zip

cd $(SolutionDir)
del StaticProxy.Fody.0.0.0-IntegrationTest.zip

echo "done"</PreBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>